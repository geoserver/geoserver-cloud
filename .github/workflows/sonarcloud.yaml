# SonarCloud analysis for main branch pushes and PRs from the same repository

name: SonarCloud QA
on:
  push:
    branches:
      - main
      - "release/**"
    paths:
      - ".github/workflows/sonarcloud.yaml"
      - ".github/workflows/sonarcloud-fork-pr.yaml"
      - "pom.xml"
      - "src/**"
      - "Makefile"
      - "config"
      - "acceptance_tests/**"
      - "ci/**"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - ".github/workflows/**"
      - "pom.xml"
      - "src/**"
      - "build-tools/**"
      - "Makefile"
      - "config"
      - "acceptance_tests/**"
      - "ci/**"
      - "docs/**"

# cancel in-progress jobs or runs for this workflow for the same pr or branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions:
  pull-requests: write
  contents: read

jobs:
  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    timeout-minutes: 60
    # Run this workflow for pushes and PRs from the same repository
    # For PRs from forks, the token will be read-only, but at least the workflow will run
    if: github.event_name != 'pull_request' || (github.event.pull_request.head.repo.full_name == github.repository && github.actor != 'dependabot[bot]')
    env:
      DEBUG_INFO: |-
        Event type: ${{ github.event_name }}
        Actor: ${{ github.actor }}
        PR Head Repo: ${{ github.event.pull_request.head.repo.full_name }}
        Base Repo: ${{ github.repository }}
        Is Same Repo: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    steps:
    - name: Debug Workflow Conditions
      run: |
        echo "$DEBUG_INFO"
        
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
        submodules: recursive
        show-progress: 'false'
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'maven'
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Analyze with Sonar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          # Pull request-specific analysis
          echo "Running pull request analysis for PR #${{ github.event.pull_request.number }}"
          ./mvnw verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dcoverage \
          -Dsonar.projectKey=geoserver_geoserver-cloud \
          -Dsonar.organization=geoserver \
          -Dsonar.pullrequest.key=${{ github.event.pull_request.number }} \
          -Dsonar.pullrequest.branch=${{ github.event.pull_request.head.ref }} \
          -Dsonar.pullrequest.base=${{ github.event.pull_request.base.ref }} \
          -Dsonar.pullrequest.provider=github \
          -Dsonar.pullrequest.github.repository=${{ github.repository }} \
          -Dsonar.scm.provider=git \
          -Dsonar.verbose=true \
          -Dmaven.javadoc.skip=true \
          -ntp \
          -T1C
        else
          # Regular branch analysis
          echo "Running regular branch analysis for ${{ github.ref }}"
          ./mvnw verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dcoverage \
          -Dsonar.projectKey=geoserver_geoserver-cloud \
          -Dsonar.organization=geoserver \
          -Dsonar.branch.name=$(echo ${{ github.ref }} | sed 's|refs/heads/||') \
          -Dsonar.scm.provider=git \
          -Dsonar.verbose=true \
          -Dmaven.javadoc.skip=true \
          -ntp \
          -T1C
        fi

    - name: Remove project jars from cached repository
      run: |
        rm -rf ~/.m2/repository/org/geoserver
        find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
