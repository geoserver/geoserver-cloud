<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.geoserver.cloud.apps</groupId>
    <artifactId>gs-cloud-base-images</artifactId>
    <version>${revision}</version>
  </parent>
  <artifactId>gs-cloud-base-spring-boot3</artifactId>
  <packaging>jar</packaging>

  <properties>
    <spring-boot.version>3.4.3</spring-boot.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Override the parent's Spring Boot version with 3.x -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-spring-boot3-starter</artifactId>
    </dependency>
    <dependency>
      <!-- include the observability libraries in the base spring boot image -->
      <groupId>org.geoserver.cloud</groupId>
      <artifactId>gs-cloud-starter-observability-spring-boot-3</artifactId>
    </dependency>
    <dependency>
      <groupId>org.geoserver.cloud.apps</groupId>
      <artifactId>gs-cloud-base-jre</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <!-- here the phase you need -->
            <phase>validate</phase>
            <configuration>
              <outputDirectory>${basedir}/target/config</outputDirectory>
              <resources>
                <resource>
                  <directory>${maven.multiModuleProjectDirectory}/config/</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
