<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.geoserver.cloud</groupId>
    <artifactId>gs-cloud-bom</artifactId>
    <version>${revision}</version>
  </parent>
  <artifactId>gs-cloud</artifactId>
  <packaging>pom</packaging>
  <name>GeoServer Cloud modules</name>
  <modules>
    <module>library</module>
    <module>catalog</module>
    <module>gwc</module>
    <module>starters</module>
    <module>apps</module>
    <module>integration-tests</module>
  </modules>
  <properties>
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <spring-cloud.version>2021.0.9</spring-cloud.version>
    <spring-boot.version>2.7.18</spring-boot.version>
    <jackson.version>2.15.3</jackson.version>
    <gs.version>2.25.0.3-CLOUD</gs.version>
    <gs.community.version>2.25.0.3-CLOUD</gs.community.version>
    <gt.version>31.0</gt.version>
    <acl.version>2.3-SNAPSHOT</acl.version>
    <!-- Downgrade netty.version used by spring-boot to the one used by geoserver azure client
    (software.amazon.awssdk:netty-nio-client:jar:2.9.24) for COG and GWC Azure plugin -->
    <netty.version>4.1.41.Final</netty.version>
    <lombok.version>1.18.30</lombok.version>
    <mapstruct.version>1.6.0.Beta1</mapstruct.version>
    <flyway.version>10.10.0</flyway.version>
    <testcontainers.version>1.19.3</testcontainers.version>
    <fork.javac>true</fork.javac>
    <javac.maxHeapSize>256M</javac.maxHeapSize>
    <!-- 
    aws.version overrides the old version provided by gs-cog->imageio-ext-cog
		(2.9.24), which
    doesn't support IAM roles for service accounts (min version 2.10.11 as
		explained in
		https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts-minimum-sdk.html)
    -->
    <aws.version>2.20.117</aws.version>
    <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
  </properties>
  <dependencyManagement>
    <!-- Note dependencies added purely to satisfy the dependencyConvergence maven-enforcer-plugin rule are in the dependencyConvergence maven profile -->
    <dependencies>
      <dependency>
        <!-- Upgrade to snakeyaml 2.0 to get rid of several CVE's from
				the 1.30 version included with spring-boot -->
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>2.2</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>2.21.1</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <!-- Upgrade jackson from the 2.13.5 version provided by spring-boot to 2.14.2 which supports snakeyaml 2.0 -->
        <!-- Note the trick for it to take effect and override all  deps is to declare it before the spring-boot bom -->
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.geoserver.acl</groupId>
        <artifactId>gs-acl-bom</artifactId>
        <version>${acl.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.github.javafaker</groupId>
        <artifactId>javafaker</artifactId>
        <version>1.0.2</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.github.f4b6a3</groupId>
        <artifactId>ulid-creator</artifactId>
        <version>5.2.3</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-platform</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <!-- exclude log4j dependencies, spring-boot-starter-logging provides everything we need -->
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-main</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
          </exclusion>
          <!-- exclude log4j dependencies, spring-boot-starter-logging provides everything we need -->
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
          </exclusion>
          <!-- exclude data formats, let them be managed by the ones explicitly imported by each service -->
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-property</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-arcgrid</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-imagemosaic</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geotiff</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wms</artifactId>
        <version>${gs.version}</version>
        <!-- exclude data formats, let them be managed by the ones explicitly imported by this module -->
        <exclusions>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geotiff</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-kml</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.geoserver</groupId>
            <!-- exclude wms, the runtime dependency is the other way around, -->
            <artifactId>gt-wms</artifactId>
          </exclusion>
          <exclusion>
            <groupId>xmlunit</groupId>
            <!-- exclude xmlunit, it has compile instead of test scope upstream -->
            <artifactId>xmlunit</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wfs</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <!-- exclude data formats, let them be managed by the ones explicitly imported by each service -->
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-shapefile</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wcs</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <!-- exclude data formats, let them be managed by the ones explicitly imported by this module -->
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geotiff</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-arcgrid</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-imagemosaic</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-image</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wcs1_0</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wcs1_1</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-wcs2_0</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-wps-core</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <!-- exclude data formats, let them be managed by the ones explicitly imported by this module -->
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geotiff</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-arcgrid</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-csv</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver.web</groupId>
        <artifactId>gs-web-core</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <!-- exclude log4j dependencies, spring-boot-starter-logging provides everything we need -->
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
          </exclusion>
          <!-- exclude data formats, let them be managed by the ones explicitly imported by this module -->
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-shapefile</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools.jdbc</groupId>
            <artifactId>gt-jdbc-postgis</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-wfs-ng</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-arcgrid</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geotiff</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-image</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-geopkg</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver.web</groupId>
        <artifactId>gs-web-wms</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.web</groupId>
        <artifactId>gs-web-wfs</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-web-wps</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.web</groupId>
        <artifactId>gs-web-wcs</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.web</groupId>
        <artifactId>gs-web-rest</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.web</groupId>
        <artifactId>gs-web-sec-core</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-rest</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-restconfig</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-restconfig-wcs</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-restconfig-wfs</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-restconfig-wms</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-restconfig-wmts</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.community</groupId>
        <artifactId>gs-jdbcconfig</artifactId>
        <version>${gs.community.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver.community</groupId>
        <artifactId>gs-jdbcstore</artifactId>
        <version>${gs.community.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
          </exclusion>
          <exclusion>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver.web</groupId>
        <artifactId>gs-web-gwc</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-gwc</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
          </exclusion>
          <!-- exclude log4j dependencies, spring-boot-starter-logging provides everything we need -->
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver</groupId>
        <artifactId>gs-gwc-rest</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <exclusion>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
          </exclusion>
          <!-- exclude log4j dependencies, spring-boot-starter-logging provides everything we need -->
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jul</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-gwc-s3</artifactId>
        <version>${gs.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-gwc</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver.community</groupId>
        <artifactId>gs-gwc-azure-blob</artifactId>
        <version>${gs.community.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-gwc</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.apache.logging.log4j</groupId>
            <!-- exclude transitive from com.microsoft.azure:azure-storage-blob:jar:11.0.0 -->
            <artifactId>log4j-slf4j-impl</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver.community</groupId>
        <artifactId>gs-flatgeobuf</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-web-resource</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.importer</groupId>
        <artifactId>gs-importer-core</artifactId>
        <version>${gs.version}</version>
        <!-- exclude data formats, let them be managed by the ones
				explicitly imported by the service that uses it -->
        <exclusions>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-csv</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools</groupId>
            <artifactId>gt-shapefile</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools.jdbc</groupId>
            <artifactId>gt-jdbc-h2</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools.jdbc</groupId>
            <artifactId>gt-jdbc-oracle</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geotools.jdbc</groupId>
            <artifactId>gt-jdbc-sqlserver</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver.importer</groupId>
        <artifactId>gs-importer-web</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.importer</groupId>
        <artifactId>gs-importer-rest</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-feature-pregeneralized</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-css</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-mbstyle</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-ysld</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-vectortiles</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.extension</groupId>
        <artifactId>gs-authkey</artifactId>
        <version>${gs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.community</groupId>
        <artifactId>gs-pgraster</artifactId>
        <version>${gs.community.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.community</groupId>
        <artifactId>gs-cog</artifactId>
        <version>${gs.community.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.geoserver.community</groupId>
        <artifactId>gs-graticule</artifactId>
        <version>${gs.community.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-core</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.geoserver.web</groupId>
            <artifactId>gs-web-core</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <!--- Override  old aws version without support for "IAM roles for service accounts" -->
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>s3</artifactId>
        <version>${aws.version}</version>
      </dependency>
      <dependency>
        <!--- Override  old aws version without support for "IAM roles for service accounts" -->
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>auth</artifactId>
        <version>${aws.version}</version>
      </dependency>
      <dependency>
        <!--- Additional dependency required to support "IAM roles for service accounts" -->
        <groupId>software.amazon.awssdk</groupId>
        <artifactId>sts</artifactId>
        <version>${aws.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geoserver.community</groupId>
        <artifactId>gs-datadir-catalog-loader</artifactId>
        <version>${gs.community.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-main</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-process</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-process-geometry</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-process-raster</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-process-feature</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-shapefile</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-wms</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-wmts</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-geotiff</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-imagemosaic</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-imagepyramid</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-arcgrid</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-geopkg</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools.jdbc</groupId>
        <artifactId>gt-jdbc-postgis</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-property</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools.jdbc</groupId>
        <artifactId>gt-jdbc-oracle</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools.jdbc</groupId>
        <artifactId>gt-jdbc-sqlserver</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.geotools</groupId>
        <artifactId>gt-wfs-ng</artifactId>
        <version>${gt.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-core</artifactId>
        <version>${flyway.version}</version>
      </dependency>
      <dependency>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-database-postgresql</artifactId>
        <version>${flyway.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.github.javafaker</groupId>
      <artifactId>javafaker</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.11.0</version>
          <inherited>true</inherited>
          <configuration>
            <release>21</release>
            <debug>true</debug>
            <encoding>UTF-8</encoding>
            <fork>${fork.javac}</fork>
            <maxmem>${javac.maxHeapSize}</maxmem>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.3.1</version>
          <configuration>
            <encoding>UTF-8</encoding>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <version>${spring-boot.version}</version>
          <inherited>false</inherited>
          <configuration>
            <attach>false</attach>
            <classifier>bin</classifier>
            <layers>
              <enabled>true</enabled>
            </layers>
            <excludes>
              <exclude>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
              </exclude>
            </excludes>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>3.2.1</version>
          <inherited>true</inherited>
          <executions>
            <execution>
              <goals>
                <goal>integration-test</goal>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.2.1</version>
          <inherited>true</inherited>
          <configuration>
            <reuseForks>false</reuseForks>
            <argLine>--add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang.reflect=ALL-UNNAMED --add-opens=java.base/java.text=ALL-UNNAMED --add-opens=java.desktop/java.awt.font=ALL-UNNAMED  --add-opens=java.desktop/sun.awt.image=ALL-UNNAMED --add-opens=java.naming/com.sun.jndi.ldap=ALL-UNNAMED</argLine>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.3.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.4.0</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.16.1</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.github.ekryd.sortpom</groupId>
        <artifactId>sortpom-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.4.1</version>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireJavaVersion>
                  <version>[21,)</version>
                </requireJavaVersion>
                <requireMavenVersion>
                  <version>[3.6.3,)</version>
                </requireMavenVersion>
                <dependencyConvergence>
                  <excludedScopes>test</excludedScopes>
                </dependencyConvergence>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <!-- Section to satisfy enforcer-maven-plugin's dependencyConvergence		rule -->
    <!-- and make sure there are no duplicate dependencies with conflicting		version numbers-->
    <profile>
      <id>dependencyConvergence</id>
      <activation>
        <property>
          <name>!skipDependencyConvergence</name>
        </property>
      </activation>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>org.locationtech.jts</groupId>
            <artifactId>jts-core</artifactId>
            <version>1.19.0</version>
          </dependency>
          <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>32.1.1-jre</version>
          </dependency>
          <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.4</version>
          </dependency>
          <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.2</version>
          </dependency>
          <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
          </dependency>
          <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.14.0</version>
          </dependency>
          <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
          </dependency>
          <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.12.0</version>
          </dependency>
          <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.10.0</version>
          </dependency>
          <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.5.4</version>
          </dependency>
          <dependency>
            <groupId>javax.measure</groupId>
            <artifactId>unit-api</artifactId>
            <version>2.1.3</version>
          </dependency>
          <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>findbugs</artifactId>
            <version>3.0.2</version>
          </dependency>
          <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
          </dependency>
          <dependency>
            <groupId>org.checkerframework</groupId>
            <artifactId>checker-qual</artifactId>
            <version>3.33.0</version>
          </dependency>
          <dependency>
            <groupId>com.google.errorprone</groupId>
            <artifactId>error_prone_annotations</artifactId>
            <version>2.18.0</version>
          </dependency>
          <dependency>
            <groupId>com.google.j2objc</groupId>
            <artifactId>j2objc-annotations</artifactId>
            <version>2.8</version>
          </dependency>
          <dependency>
            <groupId>org.apache.wicket</groupId>
            <artifactId>wicket-core</artifactId>
            <version>7.18.0</version>
          </dependency>
          <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
            <version>1.4.20</version>
          </dependency>
          <dependency>
            <groupId>com.fasterxml.woodstox</groupId>
            <artifactId>woodstox-core</artifactId>
            <version>6.5.1</version>
          </dependency>
          <dependency>
            <groupId>com.netflix.servo</groupId>
            <artifactId>servo-core</artifactId>
            <version>0.12.21</version>
          </dependency>
          <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>1.19.4</version>
          </dependency>
          <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>1.19.4</version>
          </dependency>
          <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
            <version>1.19.4</version>
          </dependency>
          <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.10.13</version>
          </dependency>
          <dependency>
            <groupId>org.ow2.asm</groupId>
            <artifactId>asm</artifactId>
            <version>9.5</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-buffer</artifactId>
            <version>${netty.version}</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec</artifactId>
            <version>${netty.version}</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http</artifactId>
            <version>${netty.version}</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-http2</artifactId>
            <version>${netty.version}</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec-socks</artifactId>
            <version>${netty.version}</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-common</artifactId>
            <version>${netty.version}</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler</artifactId>
            <version>${netty.version}</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler-proxy</artifactId>
            <version>${netty.version}</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-resolver</artifactId>
            <version>${netty.version}</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport</artifactId>
            <version>${netty.version}</version>
          </dependency>
          <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport-native-unix-common</artifactId>
            <version>${netty.version}</version>
          </dependency>
          <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.2</version>
          </dependency>
          <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>2.9.0</version>
          </dependency>
          <dependency>
            <!-- this version should match with that used in com.jayway.jsonpath:json-path;
        which provides runtime scope; however gs-auth has a compile time dependency-->
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
            <version>2.5.0</version>
            <scope>compile</scope>
          </dependency>
        </dependencies>
      </dependencyManagement>
    </profile>
    <profile>
      <id>cve</id>
      <activation>
        <property>
          <name>!skipCve</name>
        </property>
      </activation>
      <dependencyManagement>
        <dependencies>
          <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
            <version>1.12.261</version>
          </dependency>
          <dependency>
            <groupId>com.google.oauth-client</groupId>
            <artifactId>google-oauth-client</artifactId>
            <version>1.34.1</version>
          </dependency>
          <dependency>
            <groupId>com.google.http-client</groupId>
            <artifactId>google-http-client-gson</artifactId>
            <version>1.42.0</version>
          </dependency>
          <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>3.19.4</version>
          </dependency>
          <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java-util</artifactId>
            <version>3.19.4</version>
          </dependency>
          <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.7.2</version>
          </dependency>
          <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>3.42.0.0</version>
          </dependency>
          <dependency>
            <!-- actually to get rid of its com.squareup.okio:okio:2.8.0 dependency -->
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.10.0</version>
          </dependency>
          <dependency>
            <groupId>org.jssqlite-jdbcon</groupId>
            <artifactId>json</artifactId>
            <version>20230618</version>
          </dependency>
        </dependencies>
      </dependencyManagement>
    </profile>
    <profile>
      <id>coverage</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>coverage</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <configuration>
              <argLine>--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED 
				--add-opens=java.base/java.lang=ALL-UNNAMED 
				--add-opens=java.base/java.util=ALL-UNNAMED 
				--add-opens=java.base/java.lang.reflect=ALL-UNNAMED 
				--add-opens=java.base/java.text=ALL-UNNAMED 
				--add-opens=java.desktop/java.awt.font=ALL-UNNAMED 
				--add-opens=java.desktop/sun.awt.image=ALL-UNNAMED 
				--add-opens=java.naming/com.sun.jndi.ldap=ALL-UNNAMED
				${surefire.jacoco.args}</argLine>
            </configuration>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <configuration>
              <argLine>--add-exports=java.desktop/sun.awt.image=ALL-UNNAMED 
				--add-opens=java.base/java.lang=ALL-UNNAMED 
				--add-opens=java.base/java.util=ALL-UNNAMED 
				--add-opens=java.base/java.lang.reflect=ALL-UNNAMED 
				--add-opens=java.base/java.text=ALL-UNNAMED 
				--add-opens=java.desktop/java.awt.font=ALL-UNNAMED 
				--add-opens=java.desktop/sun.awt.image=ALL-UNNAMED 
				--add-opens=java.naming/com.sun.jndi.ldap=ALL-UNNAMED
				${failsafe.jacoco.args}</argLine>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>integration-test</goal>
                  <goal>verify</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>before-unit-test-execution</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                  <propertyName>surefire.jacoco.args</propertyName>
                </configuration>
              </execution>
              <execution>
                <id>after-unit-test-execution</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>test</phase>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco-ut.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>before-integration-test-execution</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <phase>pre-integration-test</phase>
                <configuration>
                  <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                  <propertyName>failsafe.jacoco.args</propertyName>
                </configuration>
              </execution>
              <execution>
                <id>after-integration-test-execution</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>post-integration-test</phase>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco-it.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>merge-unit-and-integration</id>
                <goals>
                  <goal>merge</goal>
                </goals>
                <phase>post-integration-test</phase>
                <configuration>
                  <fileSets>
                    <fileSet>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>*.exec</include>
                      </includes>
                    </fileSet>
                  </fileSets>
                  <destFile>${project.build.directory}/jacoco.exec</destFile>
                </configuration>
              </execution>
              <execution>
                <id>create-merged-report</id>
                <goals>
                  <goal>report</goal>
                </goals>
                <phase>post-integration-test</phase>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <phase>verify</phase>
                <configuration>
                  <rules>
                    <rule>
                      <element>CLASS</element>
                      <excludes>
                        <exclude>*Test</exclude>
                        <exclude>*IT</exclude>
                      </excludes>
                      <limits>
                        <limit>
                          <counter>LINE</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>0%</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                  <dataFile>${project.build.directory}/jacoco.exec</dataFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
