/* (c) 2025 Open Source Geospatial Foundation - all rights reserved
 * This code is licensed under the GPL 2.0 license, available at the root
 * application directory.
 */
package org.geoserver.spring.config.transpiler.visitor;

import com.squareup.javapoet.JavaFile;
import com.squareup.javapoet.TypeSpec;
import org.geoserver.spring.config.transpiler.context.TranspilationContext;

/**
 * Main visitor that generates the complete JavaFile from XML configuration.
 *
 * <p>This visitor orchestrates the entire code generation process by:
 * <ul>
 *   <li>Creating the main {@code @Configuration} class structure</li>
 *   <li>Delegating to specialized visitors for different aspects</li>
 *   <li>Assembling the final JavaFile with proper imports and formatting</li>
 * </ul>
 *
 * <p>The visitor pattern allows for clean separation of concerns where each
 * visitor specializes in generating specific types of code while this top-level
 * visitor coordinates the overall process.
 *
 * @since 2.28.0
 * @see TranspilationContext
 * @see BeanDefinitionVisitor
 */
public class JavaFileGeneratorVisitor {

    private final ConfigurationClassVisitor configurationClassVisitor;

    /**
     * Create a new JavaFile generator with default visitor implementations.
     */
    public JavaFileGeneratorVisitor() {
        this.configurationClassVisitor = new ConfigurationClassVisitor();
    }

    /**
     * Generate a complete JavaFile from the transpilation context.
     *
     * @param context the transpilation context containing all configuration
     * @return the generated JavaFile ready to be written
     */
    public JavaFile generateJavaFile(TranspilationContext context) {

        // Generate the main {@code @Configuration} class
        TypeSpec configurationClass = configurationClassVisitor.generateConfigurationClass(context);

        // Create and return the JavaFile
        return JavaFile.builder(context.getTargetPackage(), configurationClass)
                .addFileComment("Generated by XML Configuration Transpiler")
                .addFileComment("Source: " + String.join(", ", context.getXmlLocations()))
                .build();
    }
}
